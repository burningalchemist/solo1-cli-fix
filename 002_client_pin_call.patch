--- a/solo/devices/base.py
+++ b/solo/devices/base.py
@@ -4,6 +4,7 @@
 from cryptography.hazmat.backends import default_backend
 from fido2.attestation import Attestation
 from fido2.ctap2 import Ctap2, CredentialManagement
+from fido2.ctap2.pin import ClientPin
 from fido2.hid import CTAPHID
 from fido2.utils import hmac_sha256
 from fido2.webauthn import PublicKeyCredentialCreationOptions
@@ -80,11 +81,15 @@
 
     def change_pin(self, old_pin, new_pin):
         client = self.get_current_fido_client()
-        client.client_pin.change_pin(old_pin, new_pin)
+        ctap2 = Ctap2(self.get_current_hid_device())
+        client_pin = ClientPin(ctap2)
+        client_pin.change_pin(old_pin, new_pin)
 
     def set_pin(self, new_pin):
         client = self.get_current_fido_client()
-        client.client_pin.set_pin(new_pin)
+        ctap2 = Ctap2(self.get_current_hid_device())
+        client_pin = ClientPin(ctap2)
+        client_pin.set_pin(new_pin)
 
     def make_credential(self, pin=None):
         client = self.get_current_fido_client()
@@ -113,9 +118,10 @@
 
     def cred_mgmt(self, pin):
         client = self.get_current_fido_client()
-        token = client.client_pin.get_pin_token(pin)
         ctap2 = Ctap2(self.get_current_hid_device())
-        return CredentialManagement(ctap2, client.client_pin.protocol, token)
+        client_pin = ClientPin(ctap2)
+        token = client_pin.get_pin_token(pin)
+        return CredentialManagement(ctap2, client_pin.protocol, token)
 
     def enter_solo_bootloader(
         self,
@@ -144,7 +150,8 @@
         ctap2 = Ctap2(self.get_current_hid_device())
         client = self.get_current_fido_client()
         if pin:
-            pin_token = client.client_pin.get_pin_token(pin)
+            client_pin = ClientPin(ctap2)
+            pin_token = client_pin.get_pin_token(pin)
             pin_auth = hmac_sha256(pin_token, dgst)[:16]
             return ctap2.send_cbor(
                 0x50,
